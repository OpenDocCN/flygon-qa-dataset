- answers: '-   如何在 1 天内完成 1 部 2000000 字的巨著创作

    -   一天只是个虚数，表示快；完全有可能在几个小时内完成的。2000000字也只是个虚数，这个方法，哪怕搞到10000000字，也是没问题的。

    -   如何利用虚数时间和字数完成巨著？

    -   要利用虚数时间和字数完成巨著，首先需要借助AI的力量。通过合理的分解和安排任务，可以在短时间内完成大量的创作工作。

    -   如何借助AI完成150万字写作？

    -   可以通过生成提纲，并将提纲交给AI进行写作。根据文章的章节结构，将每个章节的主题逐级拆分，然后交给AI逐级完成写作，最后合并成完整的文章。

    -   如何利用Markdown格式和AI写作实现？

    -   可以利用Markdown格式来管理和组织文档结构，同时通过AI生成的内容填充Markdown文件，最终形成完整的文章。

    -   背景和思路

    -   在完成150万字巨著的过程中，作者和合作伙伴共同分工合作，作者负责写作，合作伙伴负责扯皮和补充图表。通过借助AI，可以高效地完成巨著创作。

    -   如何利用合作伙伴完成150万字巨著？

    -   作者和合作伙伴共同合作完成150万字巨著，作者负责写作，合作伙伴负责扯皮和补充图表。这种合作方式可以高效地完成大量的创作任务。

    -   如何使用AI生成多级提纲和写作？

    -   可以通过Markdown提纲解析器生成多级提纲，然后将提纲交给AI进行写作。AI可以根据提纲的结构和要求，逐级完成写作任务，最终形成完整的文章。

    -   如何利用Markdown格式和AI写作实现？

    -   可以利用Markdown格式管理文档结构，并通过AI生成的内容填充Markdown文件，最终实现高效的写作流程。

    -   如何设计Markdown提纲解析器和输出格式？

    -   设计Markdown提纲解析器的关键是提取各个级别的标题，并根据标题生成相应的Prompt，以便交给AI进行写作。输出格式要符合Markdown规范，方便后续的编辑和处理。

    -   实现过程

    -   实现过程中首先需要编写Markdown提纲解析器，用于提取文档中的标题和结构信息。然后利用AI进行写作，最终将写作结果填充到Markdown文件中，形成完整的文章。

    -   如何利用Markdown提纲解析器生成prompt？

    -   Markdown提纲解析器可以根据文章的结构信息生成相应的Prompt，以便交给AI进行写作。Prompt要包括章节标题、要求和指导，以确保AI能够理解任务并生成相应的内容。

    -   如何使用AI写作完成巨著？

    -   可以将巨著的提纲交给AI，要求AI根据提纲逐级完成写作任务。通过合理的分工和任务安排，可以高效地完成巨著的创作。

    -   如何采用Markdown格式和AI写作实现？

    -   可以利用Markdown格式管理文档结构，并通过AI生成的内容填充Markdown文件，最终实现高效的写作过程。通过Markdown格式，可以方便地编辑和处理文档，同时保持良好的可读性。'
  questions: '-   如何在 1 天内完成 1 部 2000000 字的巨著创作

    -   如何利用虚数时间和字数完成巨著？

    -   如何借助AI完成150万字写作？

    -   如何利用Markdown格式和AI写作实现？

    -   如何设计Markdown提纲解析器和输出格式？

    -   背景和思路

    -   如何利用合作伙伴完成150万字巨著？

    -   如何使用AI生成多级提纲和写作？

    -   如何使用Markdown格式和AI写作实现？

    -   如何设计Markdown提纲解析器和输出格式？

    -   实现过程

    -   如何利用Markdown提纲解析器生成prompt？

    -   如何使用AI写作完成巨著？

    -   如何采用Markdown格式和AI写作实现？

    -   如何设计Markdown提纲解析器和输出格式？'
  summary: "-   如何在 1 天内完成 1 部 2000000 字的巨著创作\n    1.  利用虚数时间和字数完成巨著\n    2.  借助AI完成150万字写作\n\
    \    3.  利用Markdown格式和AI写作实现\n    4.  设计Markdown提纲解析器和输出格式\n-   背景和思路\n    1.\
    \  合作伙伴协助完成150万字巨著\n    2.  利用AI生成多级提纲和写作\n    3.  使用Markdown格式和AI写作实现\n    4.\
    \  设计Markdown提纲解析器和输出格式\n-   实现过程\n    1.  利用Markdown提纲解析器生成prompt\n    2.  使用AI写作完成巨著\n\
    \    3.  采用Markdown格式和AI写作实现\n    4.  设计Markdown提纲解析器和输出格式"
  text: '# 如何在 1 天内完成 1 部 2000000 字的巨著创作> 原文：[`www.yuque.com/for_lazy/thfiu8/nasallsuuorhgz60`](https://www.yuque.com/for_lazy/thfiu8/nasallsuuorhgz60)##
    (35 赞)如何在 1 天内完成 1 部 2000000 字的巨著创作作者： 查克日期：2023-10-131 天只是个虚数，用来表示快；完全有可能在几个小时内完成的。2000000
    也只是个虚数，这个方法，哪怕搞到 10000000 字，也是没问题的。## 背景之前发过一个风向标 [借助 AIGC 降维打击各种代写](https://wx.zsxq.com/dweb2/index/topic_detail/811882841488212)。后来甲方觉得
    300 万字太夸张了，降到了 150 万字；当然，钱是不能减的。我找了合作伙伴，我负责写作，伙伴负责扯皮和补充图表。上个月文章已经完成，剩下的是扯皮了。收款已经完成了
    70%，我自己的累计投入时间不到一天。## 思路毫无疑问，一天内完成，肯定是要借助 AI 的。问题在于，怎么样让 AI 完成 150 万字。单靠一次指令肯定是不行的，再优秀的
    prompt 也做不到。思路在 [借助 AIGC 降维打击各种代写](https://wx.zsxq.com/dweb2/index/topic_detail/811882841488212)
    也提到过：> 实际上，我就是这么做的。这还是比较笼统，我拆开说一下。>> ### 提纲>> 1.  根据主题，生成一级提纲（章）；>> 2.  针对每个一级提纲，生成二级提纲；>>
    3.  ……>> 4.  根据 N 级提纲，生成 N+1 级提纲。>> 这里，N 主要取决于字数要求。ChatGPT 可以预期的，一般的 prompt 能输出的字数大约在
    1000 字左右（这次写作过程中单次平均字数约为 970 ）。>> 本次写作中，N 为 6，即拆到了 7 级小标题。>> ### 正文>> 这个比较简单了，直接拿着
    7 级小标题扔给 ChatGPT，让它写就好了。>> 主要问题有俩：>> 1.  如何遍历所有 7 级标题？肯定通过循环，不能硬编码写死。>> 2.  输出的结果如何合并？人工肯定不行，得累死，肯定也得通过程序。>>
    为此，需要设计好格式。>> ### 格式>> 最后交付的是 Word 格式，但过程文件我选用了 Markdown 格式。>> 首先，自己写一个 Markdown
    提纲解析器，用于提取各个级别的标题。这就解决了上面提到的如何遍历所有 7 级标题的问题。>> 其次，从生成提纲开始，就通过 prompt 要求 AI 按 Markdown
    格式输出。>> ## 实现>> 有了以上思路，实现就比较容易了。>> ![](img/be957cfc15ce7e3a8e01623477c2c2cb.png)>>
    但既然大佬这么说，我还是给一下代码吧。>> ### Markdown 提纲解析器>> 解析器主要是为了完成提纲解析，取出特定的标题，生成 prompt，扔给
    ChatGPT 写作。>> classMdProcobject"""Markdown 提纲处理器"""> def__init__self, pathNonewithopenf"{path}"as#
    读取文件内容'
- answers: '-   如何编写一个函数来提取指定级别的标题及其子标题？

    -   编写一个函数 `GetSections`，其参数为 `lines`（Markdown 文档的行列表）和 `level`（指定的标题级别），函数通过遍历
    Markdown 文档的行来提取指定级别的标题及其子标题。

    -   如何编写一个函数来获取指定级别的标题？

    -   编写一个函数 `GetSubSections`，其参数为各级标题（l2 至 l8），函数根据指定的级别返回相应级别的标题。

    -   如何编写一个函数来获取指定级别的Prompt？

    -   编写一个函数 `GetPrompt`，其参数为各级标题（l2 至 l8），根据指定的级别生成相应的Prompt。

    -   如何编写一个函数来获取不包含#号的标题内容？

    -   编写一个函数 `GetTitleWoSharps`，其参数为标题，函数返回不包含#号的标题内容。

    -   如何完成一个提纲，其中包括一级提纲和二级提纲？

    -   完成提纲包括一级提纲和二级提纲，可以通过手动创建或者使用算法生成。一级提纲可以直接手动书写主题，而二级提纲可以根据一级提纲的内容自动生成或者手动创建。'
  questions: '-   如何编写一个函数来提取指定级别的标题及其子标题？

    -   如何编写一个函数来获取指定级别的标题？

    -   如何编写一个函数来获取指定级别的Prompt？

    -   如何编写一个函数来获取不包含#号的标题内容？

    -   如何完成一个提纲，其中包括一级提纲和二级提纲？'
  summary: "-   提取标题及子标题的函数\n    1.  获取指定级别的标题及其子标题\n    2.  获取指定级别的标题\n    3.  获取指定级别的\
    \ Prompt\n-   获取不包含#号的标题内容\n    1.  获取不包含#号的标题内容\n    2.  完成提纲\n    3.  一级提纲\n\
    \    4.  二级提纲\n    5.  两种做法\n    6.  结果展示"
  text: '> defGetSectionsself, lines, level=2"""获取指定级别的标题及其子标题"""if2return0forin"\n"""ifnotcontinue>
    ifnot"#"continue> tryr"(#+) "0exceptprintf"标题非法: {title}"raise"标题非法"> iflencontinue>
    eliflen1else> return> defGetSubSectionsself, l2=None, l3=None, l4=None, l5=None,
    l6=None, l7=None, l8=None"""获取指定级别的标题"""ifisNonereturn> 2ifisNonereturn> 3ifisNonereturn>
    4ifisNonereturn> 5ifisNonereturn> 6ifisNonereturn> 7ifisNonereturn> return8> defGetPromptself,
    l2=None, l3=None, l4=None, l5=None, l6=None, l7=None, l8=None"""获取指定级别的 Prompt"""ifr"^#{1,8}
    .*?\d (.*)"00f"{l2}.{l3}.{l4}.{l5}.{l6}.{l7}.{l8}"elifr"^#{1,8} .*?\d (.*)"00f"{l2}.{l3}.{l4}.{l5}.{l6}.{l7}"elifr"^#{1,8}
    .*?\d (.*)"00f"{l2}.{l3}.{l4}.{l5}.{l6}"elifr"^#{1,8} .*?\d (.*)"00f"{l2}.{l3}.{l4}.{l5}">
    ifnotreturnNone> "\n"f''''''text:"""\n{ol_l2_l3_l4}\n"""\n\n 上面是本书的第 {l2} 章一个小节的目录。''''''f''''''请根据目录，完成{str_last_level_title}小节【{s_last_level_title}】的创作，''''''f''''''要求内容翔实，行文流畅，添加充分的数据和例子来支撑观点；''''''f''''''行文至少
    6 个段落，每一个段落都用 4-7 个长句进行深入分析阐述，每句话不少于 50 字；''''''f''''''使用丰富的转换连词，显示深厚的写作功底；''''''f''''''直接输出内容即可，不要再次输出小节标题；要求不少于
    1000 汉字。''''''> return> defGetTitleWoSharpsself, title"""获取不包含#号的标题内容"""tryr"^#{1,8}\s?(\d\.\d\.\d\.\d\.\d\.\d)?\s?(.*)"01exceptpass>
    return>> ### 完成提纲>> #### 一级提纲>> 这个比较简单了，可以直接把要写的主题，扔给 BING 或者 ChatGPT。可以写代码，但我直接手动来的。>>
    > 效果如下：> >> > 还行吧？> >> > 当然，字数一直是它们的一个缺陷，原谅它们吧，它们数学不好。重新调整一下字数就可以了。> >> > ####
    二级提纲> >> > 两种做法：> >> > 1.  一是直接用刚才的一级提纲，里的 bulet points 当二级提纲；> >> > 2.  二是把 bulet
    points 当作提示词，重新生成二级提纲。> >> > 第一种做法省心，但可能不一定那么满意。这里示例一下第二种做法。> >> > > 结果如下：'
- answers: '-   该片段是关于一个Python类的方法的定义，主要包括`GetSections`、`GetSubSections`、`GetPrompt`和`GetTitleWoSharps`。

    -   该片段中包含了一些方法的定义和注释，用于获取指定级别的标题、子标题、Prompt以及去除标题中的`#`号。

    -   方法`GetSections`用于获取指定级别的标题及其子标题，而`GetSubSections`则是用于获取指定级别的标题。`GetPrompt`方法用于获取指定级别的Prompt，而`GetTitleWoSharps`方法则是用于获取不包含`#`号的标题内容。

    -   该片段最后部分提到了关于创建提纲和正文的一些方法和代码，以及处理异常情况和定时问题。

    -   片段中提到了使用ChatGPT来生成文本的用法，并对使用ChatGPT和BING的优缺点进行了比较，同时也提到了可能的请求次数限制和使用Jupyter
    Notebook来运行的情况。

    -   评论区中提到了用AI写作的市场需求，以及一些人对于使用AI写作的看法。'
  questions: ''
  summary: "-   您好，我是您的助手，很高兴为您提供写作帮助。根据您的要求，我为您生成了第一章的三级大纲和相应的字数和图表数量，如下：\n    1.\
    \  生成了第一章的三级大纲和字数、图表数量\n    2.  建议使用代码完成更深层次的提纲\n    3.  推荐使用EdgeGPT工具\n-   有了提纲，就算完成一半了。借助前面的Markdown标题解析器，非常方便地生成prompt，交给ChatGPT来完成。可能有朋友会问，为什么使用ChatGPT而不是BING呢？\n\
    \    1.  使用Markdown标题解析器生成prompt\n    2.  选择ChatGPT而不是BING的原因\n    3.  使用Jupyter\
    \ Notebook运行代码\n-   评论区：\n    1.  良辰美提到用AI写100万字的水文巨著可能有市场需求\n    2.  查克提到有人用AI写小说和代写，有潜力成为产品"
  text: '> > >> > > 您好，我是您的助手，很高兴为您提供写作帮助。根据您的要求，我为您生成了第一章的三级大纲和相应的字数和图表数量，如下：> >
    >> > > 还不错吧？觉得哪里不行，人工修改一下吧。> > >> > > #### N 级提纲> > >> > > 同样的方法，可以完成其他章节提纲。>
    > >> > > 不过要注意的是，一、二级提纲，甚至三级提纲，可以手工完成，但是再往下，我建议还是用代码完成比较好，不然键盘的 `C 和 V`  要坏掉了。>
    > >> > > 推荐 [EdgeGPT](https://github.com/acheong08/EdgeGPT)。> > >> > > ### 完成正文>
    > >> > > 有了提纲，就算完成一半了。> > >> > > 借助前面的 Markdown 标题解析器，非常方便地生成 prompt，交给 ChatGPT
    来完成。> > >> > > 可能有朋友会问，为什么使用 ChatGPT 而不是 BING 呢？因为必应慢，而且次数太有限了，写不了几小节。> > >> >
    > 而且，哪怕用 ChatGPT，也得多准备几个号才行，一天 200 次请求，很快就没了。> > >> > > 我是直接在 Jupyter Notebook
    里跑的，参考代码如下：> > >> > > 1# 这个需要自己写了，参考 ChatGPT 文档，很容易的 f"Outlines.md"forinrange120#
    如果子标题数量超过 20，还可以继续增加，下同。ifnotcontinue> > > f"CS_{l2}.{l3}-{int(time.time())}"#
    分小节创建文件，方便故障恢复 withopenf"{fname}.md""a+"asopenf"{fname}.csv""a+"asf"{title[0]}\n\n"f"section,prompt,content\n"#
    CSV 是创建来备用的，可以不用 forinrange120ifnotcontinuef"{title[0]}\n\n"forinrange120ifnotcontinuef"{title[0]}\n\n"forinrange120ifnotcontinuef"{title[0]}\n\n"forinrange120ifnotcontinuef"**{mdp.GetTitleWOSharps(title[0])}**\n\n"whileTruetryf"{prompt}""\n""\n\n"#
    body = mdp.GetPrompt(l2, l3, l4, l5, l6, l7)  # 可以先用这个来测试，验证提纲格式是否正确 breakexceptasprintf"{l2}.{l3}.{l4}.{l5}.{l6}.{l7}\ttitle:
    {title}\n{e}"435500# 这个定时是有讲究的，超额之后，每次需要等待 7 分钟左右# break> > > f"{body}\n\n"0",""，"",""，""\n""\\n""\n""\\n""\t""\\t"",""，"f''{title},"{prompt}","{body}"\n''35>
    > >> > > * * *> > >> > > 评论区：> > >> > > 良辰美 : 用 AI 写 100 万字的水文巨著，这可能有着广阔的市场需求，国内外都可以封装成一个产品>
    > > 查克 : [呲牙]有拿来写小说的；有接单的（淘宝那些代写，很多都放出来的）。确实有搞头'
- answers: '-   如何描述给定的图片？

    -   给定的图片对主题有何贡献？

    -   图片是否与概要中的任何特定内容相关联？

    -   图片是否有可能引发特定的情感或反应？

    -   在文本中如何最好地呈现这张图片？

    -   给定的图片是一张显示不清晰的图像，似乎是一种科技或者数字相关的内容。

    -   图片可能是为了强调技术和数字化在写作中的重要性，与概要中提到的使用 EdgeGPT 和 ChatGPT 等工具相关。

    -   图片与概要中提到的推荐使用 EdgeGPT 相关，因此可能是要强调工具和技术的使用。

    -   这张图片可能会引发对科技、数字化和人工智能等领域的兴趣和好奇，也可能引发对写作工具和自动化写作技术的讨论和思考。

    -   在文本中最好以简短的描述配合说明，例如：“图像显示了一些技术或数字相关的内容，可能与文本中提到的自动化写作工具有关。”'
  questions: '-   如何描述给定的图片？

    -   给定的图片对主题有何贡献？

    -   图片是否与概要中的任何特定内容相关联？

    -   图片是否有可能引发特定的情感或反应？

    -   在文本中如何最好地呈现这张图片？'
  summary: "-   > > >> > > ![](img/1c37d505930596d12a88ab23e11aa07a.png)\n    1. \
    \ 图片显示\n    2.  ...\n-   * * *\n    1.  ...\n    2.  ..."
  text: '> > >> > > ![](img/1c37d505930596d12a88ab23e11aa07a.png)> > >> > > * * *'
